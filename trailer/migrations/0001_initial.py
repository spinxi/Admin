# Generated by Django 4.1.5 on 2023-01-19 18:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pghistory', '0005_events_middlewareevents'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trailer_status', models.CharField(blank=True, choices=[('Owner-Operator', 'Owner-Operator'), ('GA', 'GA'), ('Self Dot', 'Self Dot')], default='Owner-Operator', max_length=50, null=True)),
                ('unit_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('vin_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('plate_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, default=None, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('make', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('registration_start_date', models.DateField(default=None)),
                ('registration_expiration_date', models.DateField(default=None)),
                ('inspection_expiration_date', models.DateField(default=None)),
                ('physical_damage_expiration_date', models.DateField(default=None)),
                ('non_trucking_expiration_date', models.DateField(default=None)),
                ('cargo_expiration_date', models.DateField(default=None)),
                ('gps', models.CharField(blank=True, choices=[('Azuga', 'Azuga'), ('Verizon', 'Verizon')], default='Azuga', max_length=50, null=True)),
                ('gps_serial_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('rent', models.BooleanField(choices=[(0, 'No'), (1, 'Yes')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'active'), (1, 'Need Check'), (2, 'Inactive')], default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='create_trailer', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='update_trailer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrailerTracker',
            fields=[
                ('pgh_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgh_created_at', models.DateTimeField(auto_now_add=True)),
                ('pgh_label', models.TextField(help_text='The event label.')),
                ('id', models.IntegerField()),
                ('trailer_status', models.CharField(blank=True, choices=[('Owner-Operator', 'Owner-Operator'), ('GA', 'GA'), ('Self Dot', 'Self Dot')], default='Owner-Operator', max_length=50, null=True)),
                ('unit_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('vin_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('plate_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, default=None, null=True)),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('make', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('registration_start_date', models.DateField(default=None)),
                ('registration_expiration_date', models.DateField(default=None)),
                ('inspection_expiration_date', models.DateField(default=None)),
                ('physical_damage_expiration_date', models.DateField(default=None)),
                ('non_trucking_expiration_date', models.DateField(default=None)),
                ('cargo_expiration_date', models.DateField(default=None)),
                ('gps', models.CharField(blank=True, choices=[('Azuga', 'Azuga'), ('Verizon', 'Verizon')], default='Azuga', max_length=50, null=True)),
                ('gps_serial_number', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('rent', models.BooleanField(choices=[(0, 'No'), (1, 'Yes')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'active'), (1, 'Need Check'), (2, 'Inactive')], default=0)),
                ('pgh_context', models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pghistory.context')),
                ('pgh_obj', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='event', to='trailer.trailer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrailerFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files', models.FileField(blank=True, null=True, upload_to='trailers/%Y-%m-%d/')),
                ('date_created_trailer_files', models.DateTimeField(auto_now_add=True)),
                ('trailer_files', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='trailer.trailer')),
            ],
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='trailer',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_insert', sql=pgtrigger.compiler.UpsertTriggerSql(func='INSERT INTO "trailer_trailertracker" ("cargo_expiration_date", "gps", "gps_serial_number", "id", "inspection_expiration_date", "make", "non_trucking_expiration_date", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "physical_damage_expiration_date", "plate_number", "registration_expiration_date", "registration_start_date", "rent", "state", "status", "trailer_status", "unit_number", "vin_number", "year") VALUES (NEW."cargo_expiration_date", NEW."gps", NEW."gps_serial_number", NEW."id", NEW."inspection_expiration_date", NEW."make", NEW."non_trucking_expiration_date", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."physical_damage_expiration_date", NEW."plate_number", NEW."registration_expiration_date", NEW."registration_start_date", NEW."rent", NEW."state", NEW."status", NEW."trailer_status", NEW."unit_number", NEW."vin_number", NEW."year"); RETURN NULL;', hash='1d6b4786b1b3dd43740aa65b0794350614c506b7', operation='INSERT', pgid='pgtrigger_snapshot_insert_1610a', table='trailer_trailer', when='AFTER')),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='trailer',
            trigger=pgtrigger.compiler.Trigger(name='snapshot_update', sql=pgtrigger.compiler.UpsertTriggerSql(condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."trailer_status" IS DISTINCT FROM (NEW."trailer_status") OR OLD."unit_number" IS DISTINCT FROM (NEW."unit_number") OR OLD."vin_number" IS DISTINCT FROM (NEW."vin_number") OR OLD."plate_number" IS DISTINCT FROM (NEW."plate_number") OR OLD."year" IS DISTINCT FROM (NEW."year") OR OLD."state" IS DISTINCT FROM (NEW."state") OR OLD."make" IS DISTINCT FROM (NEW."make") OR OLD."registration_start_date" IS DISTINCT FROM (NEW."registration_start_date") OR OLD."registration_expiration_date" IS DISTINCT FROM (NEW."registration_expiration_date") OR OLD."inspection_expiration_date" IS DISTINCT FROM (NEW."inspection_expiration_date") OR OLD."physical_damage_expiration_date" IS DISTINCT FROM (NEW."physical_damage_expiration_date") OR OLD."non_trucking_expiration_date" IS DISTINCT FROM (NEW."non_trucking_expiration_date") OR OLD."cargo_expiration_date" IS DISTINCT FROM (NEW."cargo_expiration_date") OR OLD."gps" IS DISTINCT FROM (NEW."gps") OR OLD."gps_serial_number" IS DISTINCT FROM (NEW."gps_serial_number") OR OLD."rent" IS DISTINCT FROM (NEW."rent") OR OLD."status" IS DISTINCT FROM (NEW."status"))', func='INSERT INTO "trailer_trailertracker" ("cargo_expiration_date", "gps", "gps_serial_number", "id", "inspection_expiration_date", "make", "non_trucking_expiration_date", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "physical_damage_expiration_date", "plate_number", "registration_expiration_date", "registration_start_date", "rent", "state", "status", "trailer_status", "unit_number", "vin_number", "year") VALUES (NEW."cargo_expiration_date", NEW."gps", NEW."gps_serial_number", NEW."id", NEW."inspection_expiration_date", NEW."make", NEW."non_trucking_expiration_date", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."physical_damage_expiration_date", NEW."plate_number", NEW."registration_expiration_date", NEW."registration_start_date", NEW."rent", NEW."state", NEW."status", NEW."trailer_status", NEW."unit_number", NEW."vin_number", NEW."year"); RETURN NULL;', hash='9372326ca398dcf15bc571e8266dba4e5a7e8bdf', operation='UPDATE', pgid='pgtrigger_snapshot_update_02dc4', table='trailer_trailer', when='AFTER')),
        ),
    ]
